{"version":3,"sources":["components/BasicForm.js","components/SimpleInput.js","App.js","index.js"],"names":["BasicForm","props","basicReft","useRef","useState","nameIsValue","setNameIsValue","setName","isTouched","setIsTouched","onBlurHandler","current","value","trim","length","onChangeHandler","e","enteredFirstName","target","includes","nameInputClasses","onSubmit","preventDefault","className","htmlFor","type","id","onChange","onBlur","ref","disabled","SimpleInput","nameInputRef","nameIsValed","setNameIsValid","setisTouched","enteredName","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e1a6135a.chunk.js","sourcesContent":["import { useRef, useState } from \"react\";\n\nconst BasicForm = (props) => {\n  const basicReft = useRef();\n  // console.log(basicReft);\n  const [nameIsValue, setNameIsValue] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [isTouched, setIsTouched] = useState(false);\n\n  const onSubmitHandler = (e) => {\n    e.preventDefault();\n    const enteredFirstName = basicReft.current.value;\n    setNameIsValue(true);\n    setIsTouched(true);\n    setName(e.target.value);\n    if (enteredFirstName.trim().length < 3) {\n      setNameIsValue(false);\n      setIsTouched(false);\n      return;\n    }\n    // console.log(enteredFirstName);\n    basicReft.current.value = \"\";\n\n  };\n  const onBlurHandler = () => {\n    setNameIsValue(true);\n    setIsTouched(true);\n    const enteredFirstName = basicReft.current.value;\n\n    if (enteredFirstName.trim().length < 3) {\n      setNameIsValue(false);\n      setIsTouched(false);\n      return;\n    }\n  };\n  const onChangeHandler = (e) => {\n    const enteredFirstName = basicReft.current.value;\n    setNameIsValue(true);\n    setIsTouched(true);\n    setName(e.target.value);\n\n    if (enteredFirstName.trim().includes(\"@\")) {\n      setNameIsValue(false);\n      setIsTouched(false);\n      return;\n    }\n    setName(\"\");\n  };\n  const nameInputClasses = nameIsValue\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={onSubmitHandler}>\n      <div className=\"control-group\">\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">First Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onChange={onChangeHandler}\n            onBlur={onBlurHandler}\n            ref={basicReft}\n          />\n          {!nameIsValue && (\n            <p className=\"error-text\">Значение инпута должна быть выше 3!</p>\n          )}\n        </div>\n        <div className={nameInputClasses}>\n          <label htmlFor=\"name\">Last Name</label>\n          <input\n            type=\"text\"\n            id=\"name\"\n            onBlur={onBlurHandler}\n            ref={basicReft}\n            onChange={onChangeHandler}\n          />\n          {!nameIsValue && (\n            <p className=\"error-text\">Значение инпута должна быть выше 3!</p>\n          )}\n        </div>\n      </div>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">E-Mail Address</label>\n        <input\n          type=\"email\"\n          id=\"name\"\n          onBlur={onBlurHandler}\n          ref={basicReft}\n          onChange={onChangeHandler}\n        />\n        {!nameIsValue && (\n          <p className=\"error-text\">Значение инпута должна быть выше 3!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!isTouched}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default BasicForm;\n","import { useRef, useState } from \"react\";\n\nconst SimpleInput = (props) => {\n  const nameInputRef = useRef();\n  const [nameIsValed, setNameIsValid] = useState(true);\n  const [name, setName] = useState(\"\");\n  const [isTouched, setisTouched] = useState(false);\n\n  //_______________________________Первая способ - проверка с Submitом\n  const formSubmitHandler = (e) => {\n    e.preventDefault();\n    // console.log(nameInputRef.current.value);\n    const enteredName = nameInputRef.current.value;\n    setNameIsValid(true);\n    setisTouched(true);\n\n    if (enteredName.trim().length < 5) {\n      setNameIsValid(false);\n      setisTouched(false);\n      // console.log(\"empty\");\n      return;\n    }\n    // console.log(enteredName);\n    nameInputRef.current.value = \"\";\n   };\n  //________________________________Вторая способ -  проверка с фокусом\n\n  const onBlurHandler = () => {\n    setNameIsValid(true);\n    setisTouched(true);\n\n    // console.log(\"losing focus\");\n    const enteredName = nameInputRef.current.value;\n\n    if (enteredName.trim() === '') {\n      setNameIsValid(false);\n      setisTouched(false);\n\n      console.log(\"empty\");\n      return;\n    }\n  };\n\n  //___________________________Третая способ - проиерка каждого нажатие инпута\n  const onChangeHandler = (e) => {\n    setName(e.target.value);\n    // console.log(e.target.value);\n    const enteredName = nameInputRef.current.value;\n    setNameIsValid(true);\n    setisTouched(true);\n\n    if (enteredName.trim() === '') {\n      setNameIsValid(false);\n      setisTouched(false);\n\n      console.log(\"empty\");\n      return;\n    }\n  };\n\n  const nameInputClasses = nameIsValed\n    ? \"form-control\"\n    : \"form-control invalid\";\n  return (\n    <form onSubmit={formSubmitHandler}>\n      <div className={nameInputClasses}>\n        <label htmlFor=\"name\">Your Name</label>\n        <input\n          type=\"text\"\n          id=\"name\"\n          ref={nameInputRef}\n          onBlur={onBlurHandler}\n          onChange={onChangeHandler}\n        />\n        {!nameIsValed && (\n          <p className=\"error-text\">Name should be more 5 characters!</p>\n        )}\n      </div>\n      <div className=\"form-actions\">\n        <button disabled={!isTouched}>Submit</button>\n      </div>\n    </form>\n  );\n};\n\nexport default SimpleInput;\n","import BasicForm from './components/BasicForm';\nimport Newinput from './components/newinput';\nimport SimpleInput from './components/SimpleInput';\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <SimpleInput /> <br/><hr/>\n      <BasicForm/>\n    </div>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}